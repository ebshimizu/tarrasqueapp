name: Build, push, and deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/**'
      - 'helm/**'
      - 'packages/demo/**'

env:
  DEPLOYMENT_FILE_PATH: helm/demo/deployment.yaml
  DEPLOYMENT_NAME: demo-deployment
  DIGITALOCEAN_REGISTRY: registry.digitalocean.com/tarrasqueapp
  DIGITALOCEAN_REPOSITORY: demo
  DIRECTORY: ./packages/demo
  IMAGE_TAG: staging
  NAMESPACE: demo

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@main

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build container image
        working-directory: ${{ env.DIRECTORY }}
        run: docker build -t ${{ env.DIGITALOCEAN_REGISTRY }}/${{ env.DIGITALOCEAN_REPOSITORY }}:${{ env.IMAGE_TAG }} -f Dockerfile.prod .

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push image to DigitalOcean Container Registry
        run: docker push ${{ env.DIGITALOCEAN_REGISTRY }}/${{ env.DIGITALOCEAN_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 tarrasqueapp

      - name: Deploy to DigitalOcean Kubernetes
        run: |
          helm repo add jetstack https://charts.jetstack.io
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update

          helm dependency build helm/cert-manager
          helm dependency build helm/ingress-nginx

          helm upgrade --install cert-manager ./helm/cert-manager -n cert-manager --create-namespace
          helm upgrade --install ingress-nginx ./helm/ingress-nginx -n ingress-nginx --create-namespace
          helm upgrade --install demo ./helm/demo -n demo --create-namespace

      # - name: Verify deployment
      #   run: kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} -n ${{ env.NAMESPACE }}
