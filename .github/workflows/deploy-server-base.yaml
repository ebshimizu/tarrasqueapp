name: 'Deploy server'

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      ENVIRONMENT_URL:
        required: true
        type: string
      KUBE_NAMESPACE:
        required: true
        type: string
      HELM_ARGS:
        required: true
        type: string

env:
  CLUSTER_NAME: tarrasqueapp-cluster
  DOCKERFILE: packages/server/docker/Dockerfile.prod
  HELM_CHART: server
  IMAGE_NAME: server
  KUBE_DEPLOYMENT: server
  REGISTRY: registry.digitalocean.com/tarrasque

jobs:
  deploy-server:
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    environment:
      name: ${{ inputs.ENVIRONMENT }}
      url: 'https://${{ inputs.ENVIRONMENT_URL }}'

    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          file: ${{ env.DOCKERFILE }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.ENVIRONMENT }}
          build-args: |
            HOST=https://${{ inputs.ENVIRONMENT_URL }}
            NODE_ENV=${{ secrets.NODE_ENV }}
            VERBOSE=${{ secrets.VERBOSE }}
            COOKIE_SECRET=${{ secrets.COOKIE_SECRET }}
            JWT_ACCESS_TOKEN_NAME=${{ secrets.JWT_ACCESS_TOKEN_NAME }}
            JWT_ACCESS_TOKEN_SECRET=${{ secrets.JWT_ACCESS_TOKEN_SECRET }}
            JWT_ACCESS_TOKEN_EXPIRATION_TIME=${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION_TIME }}
            JWT_REFRESH_TOKEN_NAME=${{ secrets.JWT_REFRESH_TOKEN_NAME }}
            JWT_REFRESH_TOKEN_SECRET=${{ secrets.JWT_REFRESH_TOKEN_SECRET }}
            JWT_REFRESH_TOKEN_EXPIRATION_TIME=${{ secrets.JWT_REFRESH_TOKEN_EXPIRATION_TIME }}
            SENTRY_ENABLED=${{ secrets.SENTRY_ENABLED }}
            SENTRY_DSN=${{ secrets.SENTRY_DSN }}
            STORAGE_PROVIDER=${{ secrets.STORAGE_PROVIDER }}
            STORAGE_S3_BUCKET=${{ secrets.STORAGE_S3_BUCKET }}
            STORAGE_S3_ACCESS_KEY_ID=${{ secrets.STORAGE_S3_ACCESS_KEY_ID }}
            STORAGE_S3_SECRET_ACCESS_KEY=${{ secrets.STORAGE_S3_SECRET_ACCESS_KEY }}
            STORAGE_S3_REGION=${{ secrets.STORAGE_S3_REGION }}
            STORAGE_S3_ENDPOINT=${{ secrets.STORAGE_S3_ENDPOINT }}
            STORAGE_S3_URL=${{ secrets.STORAGE_S3_URL }}
            FFMPEG_PATH=${{ secrets.FFMPEG_PATH }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.CLUSTER_NAME}}

      - name: Deploy to DigitalOcean Kubernetes
        run: |
          helm upgrade --install ${{ env.HELM_CHART }} ./helm/${{ env.HELM_CHART }} --namespace ${{ inputs.KUBE_NAMESPACE }} --create-namespace \
            --set image.tag="${{ inputs.ENVIRONMENT }}" \
            --set env.HOST="https://${{ inputs.ENVIRONMENT_URL }}" \
            --set env.NODE_ENV="${{ secrets.NODE_ENV }}" \
            --set env.VERBOSE="${{ secrets.VERBOSE }}" \
            --set env.COOKIE_SECRET="${{ secrets.COOKIE_SECRET }}" \
            --set env.JWT_ACCESS_TOKEN_NAME="${{ secrets.JWT_ACCESS_TOKEN_NAME }}" \
            --set env.JWT_ACCESS_TOKEN_SECRET="${{ secrets.JWT_ACCESS_TOKEN_SECRET }}" \
            --set env.JWT_ACCESS_TOKEN_EXPIRATION_TIME="${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION_TIME }}" \
            --set env.JWT_REFRESH_TOKEN_NAME="${{ secrets.JWT_REFRESH_TOKEN_NAME }}" \
            --set env.JWT_REFRESH_TOKEN_SECRET="${{ secrets.JWT_REFRESH_TOKEN_SECRET }}" \
            --set env.JWT_REFRESH_TOKEN_EXPIRATION_TIME="${{ secrets.JWT_REFRESH_TOKEN_EXPIRATION_TIME }}" \
            --set env.SENTRY_ENABLED="${{ secrets.SENTRY_ENABLED }}" \
            --set env.SENTRY_DSN="${{ secrets.SENTRY_DSN }}" \
            --set env.STORAGE_PROVIDER="${{ secrets.STORAGE_PROVIDER }}" \
            --set env.STORAGE_S3_BUCKET="${{ secrets.STORAGE_S3_BUCKET }}" \
            --set env.STORAGE_S3_ACCESS_KEY_ID="${{ secrets.STORAGE_S3_ACCESS_KEY_ID }}" \
            --set env.STORAGE_S3_SECRET_ACCESS_KEY="${{ secrets.STORAGE_S3_SECRET_ACCESS_KEY }}" \
            --set env.STORAGE_S3_REGION="${{ secrets.STORAGE_S3_REGION }}" \
            --set env.STORAGE_S3_ENDPOINT="${{ secrets.STORAGE_S3_ENDPOINT }}" \
            --set env.STORAGE_S3_URL="${{ secrets.STORAGE_S3_URL }}" \
            --set env.FFMPEG_PATH="${{ secrets.FFMPEG_PATH }}" \
            ${{ inputs.HELM_ARGS }}

      - name: Verify deployment
        run: kubectl rollout status deployment/${{ env.KUBE_DEPLOYMENT }} --namespace ${{ inputs.KUBE_NAMESPACE }} --timeout 1m
