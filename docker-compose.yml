version: '3.7'
services:
  #################
  ### Front-end ###
  #################

  client:
    container_name: client
    platform: linux/amd64
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - caddy
    env_file:
      - ./apps/client/.env

  ################
  ### Back-end ###
  ################

  server:
    container_name: server
    platform: linux/amd64
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - caddy
      - postgres
    env_file:
      - ./apps/server/.env

  ################
  ### Database ###
  ################

  postgres:
    container_name: postgres
    image: postgres:14-alpine
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - postgres
    ports:
      - '5432:5432'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    env_file:
      - ./apps/server/.env

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - postgres
    ports:
      - '8080:80'
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    env_file:
      - ./apps/server/.env
    links:
      - postgres:postgres

  ######################
  ### Infrastructure ###
  ######################

  caddy:
    container_name: caddy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - caddy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./apps/caddy:/srv
      - ./data/caddy:/data/caddy
      - caddy_config:/config
      - caddy_data:/data
    build:
      context: ./apps/caddy
      dockerfile: Dockerfile
    env_file:
      - ./apps/caddy/.env
    # stdin_open: true
    # tty: true

networks:
  caddy:
  postgres:

volumes:
  caddy_config:
  caddy_data:
